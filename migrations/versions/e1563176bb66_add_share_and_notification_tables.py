"""Add share and notification tables

Revision ID: e1563176bb66
Revises: 
Create Date: 2025-04-10 15:35:40.357899

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e1563176bb66'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_invitations_id', table_name='invitations')
    op.drop_index('ix_invitations_invite_code', table_name='invitations')
    op.drop_index('ix_invitations_invitee_email', table_name='invitations')
    op.drop_index('ix_invitations_invitee_phone', table_name='invitations')
    op.drop_table('invitations')
    op.drop_index('ix_invitation_codes_code', table_name='invitation_codes')
    op.drop_index('ix_invitation_codes_id', table_name='invitation_codes')
    op.drop_table('invitation_codes')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_index('ix_users_phone_number', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_shares_content_id', table_name='shares')
    op.drop_index('ix_shares_id', table_name='shares')
    op.drop_table('shares')
    op.drop_index('ix_device_tokens_id', table_name='device_tokens')
    op.drop_index('ix_device_tokens_token', table_name='device_tokens')
    op.drop_table('device_tokens')
    op.drop_index('ix_notifications_id', table_name='notifications')
    op.drop_table('notifications')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('notifications',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('message', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('data', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_read', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='notifications_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='notifications_pkey')
    )
    op.create_index('ix_notifications_id', 'notifications', ['id'], unique=False)
    op.create_table('device_tokens',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('token', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('platform', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='device_tokens_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='device_tokens_pkey')
    )
    op.create_index('ix_device_tokens_token', 'device_tokens', ['token'], unique=False)
    op.create_index('ix_device_tokens_id', 'device_tokens', ['id'], unique=False)
    op.create_table('shares',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('from_user_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('to_user_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('content_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('content_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('message', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['from_user_id'], ['users.id'], name='shares_from_user_id_fkey'),
    sa.ForeignKeyConstraint(['to_user_id'], ['users.id'], name='shares_to_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='shares_pkey')
    )
    op.create_index('ix_shares_id', 'shares', ['id'], unique=False)
    op.create_index('ix_shares_content_id', 'shares', ['content_id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('phone_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('display_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('invited_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['invited_by'], ['users.id'], name='users_invited_by_fkey'),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_users_phone_number', 'users', ['phone_number'], unique=True)
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    op.create_table('invitation_codes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('used_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='invitation_codes_pkey')
    )
    op.create_index('ix_invitation_codes_id', 'invitation_codes', ['id'], unique=False)
    op.create_index('ix_invitation_codes_code', 'invitation_codes', ['code'], unique=True)
    op.create_table('invitations',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('inviter_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('invitee_phone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('invitee_email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('invite_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('accepted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('invitee_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['invitee_id'], ['users.id'], name='invitations_invitee_id_fkey'),
    sa.ForeignKeyConstraint(['inviter_id'], ['users.id'], name='invitations_inviter_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='invitations_pkey')
    )
    op.create_index('ix_invitations_invitee_phone', 'invitations', ['invitee_phone'], unique=False)
    op.create_index('ix_invitations_invitee_email', 'invitations', ['invitee_email'], unique=False)
    op.create_index('ix_invitations_invite_code', 'invitations', ['invite_code'], unique=True)
    op.create_index('ix_invitations_id', 'invitations', ['id'], unique=False)
    # ### end Alembic commands ###
